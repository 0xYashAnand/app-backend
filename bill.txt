{
    companyId : "123",
    billNo : "123456",
    customerDetails : {
        customerName : "John Doe",
        customerAddress : "123 Main St",
        customerMobile : "1234567890",
        customerEmail : "customer@email.com",
        anniversary : "01/01/2021",
        birthday : "01/01/2021",
    }
    billDate : "01/01/2021",
    billtime : "12:00 PM",
    billNumber : "123456",
    billproducts : {
        product1 : {
            productName : "Product 1",
            productQuantity : "1",
            productPrice : "100",
            productTotal : "100",
            productRecommendedBy : "John Doe"
        },
    },
    billServices :{
        service1 : {
            serviceName : "Service 1",
            servicePrice : "100",
            serviceTotal : "100"
            sericeBy : "John Doe"
        },
    }
    billTotal : "1000",
    billedby : "John Doe",
    paymentMode : "Cash/Cash+Online/Online",
    paidByCash : "100",
    paidByOnline : "100",
    paymentStatus : "Paid/Unpaid/Partial",
    billType : "Dues Cleared/Advance Booking Payment/Product Purchase/Service",
},


companyDetails :{
    companyName : "ABC",
    companyAddress : "XYZ",
    companyCity : "PQR",
    companyState : "MNO",
    companyZip : "12345",
    companyPhone : "1234567890",
    companyEmail : "company@email.com",
    companyWebsite : "www.company.com",
    companyTerms : "Terms and Conditions",
    companyPrivacy : "Privacy Policy",
    companyRefund : "Refund Policy",
    companyCancellation : "Cancellation Policy",
}

customerDetails : {
    customerName : "John Doe",
    customerAddress : "123 Main St",
    customerMobile : "1234567890",
    customerEmail : "customer@email.com",
    anniversary : "01/01/2021",
    birthday : "01/01/2021",
}

customerBills : {
    customerId : "123",
    billIds : ["123456", "123457", "123458"]
}

products : {
    productId : "123",
    productName : "Product 1",
    productPrice : "100",
    productQuantity : "10",
    productCategory : "Category 1",
}

services : {
    serviceId : "123",
    serviceName : "Service 1",
    servicePrice : "100",
    serviceCategory : "Category 1",
}

is provided by a member of a company and in a serivce table with service name

I am making a bill-app which generate a bill for registered user as a company, so when a user register as a company he had to fill all the company details in it 
for one time then user can create a bill/invoice so user had to enter customer details like  customerName customerAddress customerMobile customerEmail for the bill 
so the logic is here if the customer details is already present in db like we can search it through phone number in frontend and assign a customerId in a body where
we will be sending the request if it exist otherwise we will create a new customer in our 'CustomerDetails' mongoose shema present in mongodb so after entering 
user had to enter the services the custmer has taken like serviceName, servicePrice, serviceBy (which staff has done that work), now what will happen that
in frontend form after entering all these details bill total will be created so the services should be a single or may be multiple.

i am using nest-js in backend and mongodb as a database and mongoose as a query language so help me with my app:

so when a user enters all the details in form and presses generate-invoice btn then in backend what happens is that it will create customer if it is not present 
(i.e mobile or email as a unique key to search for customer details in frontend) and generate customerId then we already have comapnyId as user is signed in as a company
then we have services provided what i want is that each service taken by client will be linked to that particular bill id like {serviceName, servicePrice, billId}
for each service a unique entry will be done in db (services) then the rest of thing will be done


billType: dropdown with values: 'Advance Booking', 'Due Payment' , 'Full Payment' , 'Partial Payment'
paymentStatus: dropdown with values: 'Paid', 'Unpaid'
billedBy: dropdown as same as 'recommended by' or 'Service By' They both will fetch the same api for dropdown data from backend 

Issue
-> In customerBills 1 customer can have many companies so customerBills should have a companyId for which companies he had those bills